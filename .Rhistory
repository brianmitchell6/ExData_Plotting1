testmatrix1
testmatrix1 <- matrix(c(3:6,9:5), c(3,3))
testmatrix1
solve(testmatrix1)
invmatrix <- matrix( ,c(3,3))
invmatrix <- matrix(rep(NA, 9) ,c(3,3))
testmatrix2 <- makeCacheMatrix()
testmatrix2$get()
testmatrix2$set(testmatrix1)
testmatrix2$get()
testmatrix2$getinverse()
cacheSolve(testmatrix2)
cacheSolve(makeCacheMatrix())
cacheSolve()
invmatrix <- cacheSolve(testmatrix2)
class(invmatrix)
invmatrix$cacheSolve(testmatrix2)
invmatrix
source('C:/Users/Safe User/Desktop/Online Classes/R Programming/Data Files/ProgrammingAssignment2/cachematrix.R')
cacheSolve(testmatrix2)
testmatrix2$getinverse()
testmatrix2$setinverse(testmatrix1)
testmatrix2$getinverse()
cacheSolve(testmatrix2)
cacheSolve(testmatrix2)
cacheSolve(testmatrix2)
testmatrix1
solve(testmatrix1)
cacheSolve(testmatrix2)
cacheSolve(testmatrix1)
invmatrix <- cacheSolve(testmatrix2)
testmatrix2$setinverse(NULL)
cacheSolve(testmatrix2)
source('C:/Users/Safe User/Desktop/Online Classes/R Programming/Data Files/ProgrammingAssignment2/cachematrix.R')
source('C:/Users/Safe User/Desktop/Online Classes/R Programming/Data Files/ProgrammingAssignment2/cachematrix.R')
library(datasets)
data(iris)
?iris
library(SDSFoundations)
animaldata <- AnimalData
rm(iris)
table(animaldata)
View(animaldata)
View(animaldata)
dogs <- animaldata[animaldata$Animal.Type == "Dog"]
dogs <- animaldata[animaldata$Animal.Type == "Dog",]
View(dogs)
cats <- animaldata[animaldata$Animal.Type == "Cat",]
View(cats)
View(cats)
adultdogs <- dogs[dogs$Ag.Intake > 0,]
adultdogs <- dogs[dogs$Age.Intake > 0,]
adultcats <- dogs[cats$Age.Intake > 0,]
View(adultdogs)
View(adultdogs)
length(adultdogs)
length(,adultdogs)
length(adultdogs,)
ncol(adultdogs$Sex)
nrow(adultdogs$Sex)
nrow(adultdogs)
nrow(adultcats)
View(adultcats)
adultcats <- cats[cats$Age.Intake > 0,]
?hist
hist(adultdogs$Weight)
hist(adultcats$Weight)
mean(adultcats$Weight)
sd(adultcats$Weight)
13-8.6
4.4/1.9
1-pnorm(2.3)
?fivenu
?fivenum
fivenum(adultdogs$Weight)
1.9*3
8.6-5.7
8.6+5.7
median(adultcats$Weight)
table(dogs)
table(dogs$Intake.Type)
1+81+20+189
81/291
surrender <- dogs[dogs$Intake.Type == "Owner Surrender"]
surrender <- dogs[dogs$Intake.Type == "Owner Surrender",]
table(surrender$Outcome.Type)
33+13+2+33
2/81
mean(surrender$Outcome.Type == "Return to Owner")
mean(surrender[surrender$Outcome.Type == "Return to Owner",])
mean(surrender[,surrender$Outcome.Type == "Return to Owner"])
return <- surrender[surrender$Outcome.Type == "Return to Owner"]
return <- surrender[surrender$Outcome.Type == "Return to Owner",]
mean(return$Days.Shelter)
6/.15
40*.55
1.5/1.1
1.5*1.1
6.7-4.5
2.2/1.1
6.7-5.38
1.32/1.1
6.7-8.79
-2.09/1.1
.5793-.0287
6.7+1.65
6.7-1.35
1-.0228
8.79-6.7
2.09/1.1
5.38-6.7
-1.32/1.1
.9713-.1151
-1.5*1.1
-1.65+6.7
rm(adopted,animaldata,daystoadopt)
library(datasets)
data(iris)
?iris
iris
summary(iris)
apply(iris, 2, mean)
head(iris)
apply(iris, 1, mean)
apply(iris, 2, mean)
View(iris)
View(iris)
apply(iris[, 1:4], 2, mean)
data(mtcars)
?mtcars
head(mtcars)
sapply(mtcars, cyl, mean)
with(mtcars, tapply(mpg, cyl, mean))
with(mtcars, tapply(hp, cyl, mean))
hptemp <- with(mtcars, tapply(hp, cyl, mean))
hptemp[3] - hptemp[1]
debug(ls)
ls
n
ls()
e
exit
exit()
stop
end
quit
quit()
stop()
now()
help
help
help
contiune
help
c
c
c
c
c
68/(68+109)
109/(109+89)
(94+89)/360
(52+61)/626
17/43
17/35
17/52
43/626
rm(adopted,animaldata,daystoadopt)
1:20
20:1
c(1:20,19:1)
tmp <- c(4,6,3)
rep(c(4,6,3),10)
c(rep(c(4,6,3),10),4)
rep(tmp,10)
rep(tmp, 1=31)
rep(tmp, l=31)
rep(tmp, times=c(10,20,30))
rep(tmp, times=10)
rep(tmp, times=c(10))
rep(tmp, times=c(10,10,10))
rep(1:10, by=3)
?rep()
rep(tmp,each=10)
?seq
seq(3,6, by=.1)
x <= seq(3,6,by=.1)
x <- seq(3,6,by=.1)
exp(x)*cos(x)
rm(tmp,x)
tmp1 <- seq(3,36,by=3)
tmp2 <- seq(11,34,by=3)
tmp2 <- seq(1,34,by=3)
tmpa <- rep(.1,12)
tmpb <- rep(.2,12)
tmpcombine <- (tmpa^tmp1)*(tmpb^tmp2)
tmp10 <- seq(1,25)
tmpaa <- (2^tmp10)/tmp10
rm(tmp1,tmp10,tmp2,tmpa,tmpb,tmpaa,tmpcombine)
clrscr
clrscr()
clscr()
cnt <- 10:100
sum(cnt^3 + 4*(cnt^2))
cnt <- 1:25
sum((2^cnt)/cnt + (3^cnt)/(cnt^2))
paste("label", as.character(1:30), sep=" ")
paste("label", as.character(1:30))
paste("fn", 1:30, sep="")
rm(cnt)
set.seed(50)
xVec <- sample(0:999, 250, replace=TRUE)
yVec <- sample(0:999, 250, replace=TRUE)
yVec - (xVec -1)
yVec - xVec[2]
yVec - xVec[-1]
yVec[2:250] - xVec[1:249]
yVec[-1]
yVec[-1] - xVec[-length[xVec]]
yVec[-1] - xVec[-length(xVec)]
rm(adopted)
rm(animaldata)
rm(daystoadopt)
library(SDSFoundations)
acl <- AustinCityLimits
View(acl)
unique(acl$Artist)
head(acl$Grammy)
table(acl$Grammy, 10)
table(acl$Grammy)
table(acl$Grammy[1:10])
table(acl$Gender)
twoway <- table(acl$Gender, acl$Genre)
twoway
barplot(twoway, legend=TRUE, beside=TRUE)
barplot(twoway)
barplot(twoway, legend=TRUE)
prop.table(genre)
genre <- table(acl$Genre)
gender <- table(acl$Gender)
prop.table(genre)
prop.table(twoway,1)
table(acl$Gender)
table(acl$Genre)
acl[acl$Gender=="M" & acl$Genre=="Jazz/Blues"]
acl[,acl$Gender=="M" & acl$Genre=="Jazz/Blues"]
acl[,acl$Gender=="M" && acl$Genre=="Jazz/Blues"]
acl[, Gender =="M" & Genre == "Jazz/Blues"]
acl[acl$Gender=="M" && acl$Genre=="Jazz/Blues",]
acl[acl$Gender=="M" & acl$Genre=="Jazz/Blues",]
nrow(acl[acl$Gender=="M" & acl$Genre=="Jazz/Blues",])
prop.table(acl$Genre)
prop.table(genre)
prop.table(twoway,1)
table(acl$Grammy)
acl$Grammy == "Y"
table(acl$Grammy == "Y")
table(acl[acl$Grammy == "Y".])
table(acl[acl$Grammy == "Y",])
acl[acl$Grammy == "Y",]
acl[acl$Grammy == "Y",acl$Genre]
table(acl[acl$Grammy == "Y",acl$Genre])
grammywin <- acl[acl$Grammy == "Y",]
grammywin
colnames(grammywin)
table(grammywin$Genre)
prop.table(acl$Grammy)
table(acl$Grammy)
49/(67+49)
prop.table(acl$Grammy, acl$Genre)
table(acl$Grammy, acl$Genre)
prop.table(table(acl$Grammy, acl$Genre))
12+6+26+5
12/18
6/13
26/68
5/17
prop.table(table(acl$Grammy))
barplot(prop.table(table(acl$Grammy, acl$Genre)))
sum(acl$Facebook.100k)
fb100 <- acl[acl$Facebook.100k == 1, ]
table(fb100$Age.Group)
table(acl$Age.Group)
11/14
31/40
24/30
19/32
.15/.35
12+35
47/200
50/130
.06/.38
wr <- WorldRecords
View(wr)
table(wr$Event)
colnames(wr)
menshot <- wr[wr$Event == "Mens Shotput",]
womenshot <- wr[wr$Event == "Womens Shotput", ]
plot(menshot$Year, menshot$Record, main="Mens Shotput World Records", xlab="Year", ylab="World Record Distance (m)", pch=16)
plot(womenshot$Year, womenshot$Record, main="Womens Shotput World Records", xlab="Year", ylab="World Record Distance (m)", pch=16)
linFit(menshot$Year, menshot$Record)
linFit(womenshot$Year, womenshot$Record)
install.packages("swirl")
library(swirl)
install_from_swirl("Getting and Cleaning Data")
swirl()
mydf <- read.csv(path2csv, stringAsFactors=FALSE)
mydf <- read.csv(path2csv, stringsAsFactors=FALSE)
dim(mydef)
dim(mydf)
head(mydf)
library(dplyr)
packageVersion("dplyr")
cran <- tbl_df(mydf)
rm("mydf")
?tbl_df
cran
?select
select(cran, ip_id, package, country)
5:20
select(cran, r_arch:country)
select(cran, country:r_arch)
cran
select(cran,-time)
-5:20
-(5:20)
select(cran, -(x:size))
select(cran, x:size)
select(cran, x)
select(cran, size)
select(cran, -(x:size))
select(cran, -(X:size))
filter(cran, package=="swirl")
filter(cran, r_version=="3.1.1", country=="US")
?Camparison
?Comparison
filter(cran, r_version<="3.0.2", country=="IN")
filter(cran, country=="US"|country=="IN")
filter(cran, size>100500, r_os=="linux-gnu")
is.na( c(3,5,NA, 10) )
!is.na( c(3,5,NA, 10) )
filter(cran, !is.na(r_version))
cran2 <- select(cran, size:ip_id)
arrange(cran2, ip_id)
arrange(cran2, desc(ip_id) )
arrange(cran2, package, ip_id)
arrange(cran2, country, desc(r_version), ip_id)
cran3 <- select(cran, ip_id, package, size)
cran3
mutate(cran3, size_mb = size / 2^20)
mutate(cran3, size_mb = size / 2^20, size_gb = size_mb / 2^10)
mutate(cran3, correct_size = size + 1000)
summarize(cran, avg_bytes = mean(size))
library(dplyr)
cran <- tbl_df(mydf)
rm(mydf)
rm("mydf")
cran
?group_by
by_package <- group_by(cran, package)
by_package
summarize(by_package, mean(size))
pack_sum <- summarize(by_package,
count = n(),
unique = n_distinct(ip_id),
countries = n_distinct(country),
avg_bytes = mean(size))
View(pack_sum)
submit()
pack_sum
quantile(pack_sum$count, probs = 0.99)
top_counts <- filter(pack_sum, count > 679)
top_counts
head(top_counts, 20)
arrange(top_counts, desc(count))
quantile(pack_sum$unique, probs=0.99)
top_unique <- filter(pack_sum, unique > 465)
top_unique
arrange(top_unique, desc(unique))
submit()
submit()
?chain
submit()
cran %>%
select(ip_id, country, package, size) %>%
print()
submit()
submit()
submit()
submit()
submit()
library(tidyr)
students
?gather
gather(students, sex, count, -grade)
students2
res <- gather(students2, sex_class, count, -grade)
res
?separate
separate(data=res, col=sex_class, into=c("sex", "class"))
submit()
students3
submit()
?spread
submit()
submit()
submit()
extract_numeric("class5")
?mutate
submit()
submit()
students4
submit()
submit()
submit()
passed
failed
mutate(passed, status="passed")
passed <- mutate(passed, status="passed")
failed <- mutate(failed, status="failed")
rbind_list(passed, failed)
sat
submit()
submit()
suybmit()
submit()
submit()
submit()
Sys.getlocate("LC_TIME")
Sys.getlocale("LC_TIME")
quit()
/
?
help
library(lubridate)
help(package=lubridate)
this_day <- today()
this_day
year(this_day)
wday(this_day)
wday(this_day, label=TRUE)
this_moment <- now()
this_moment
hour(this_moment)
my_date <- ymd("1989-05-17")
my_date
class(my_date)
ymd("1989 May 17")
mdy("March 12, 1975")
dmy(25081985)
ymd("192012")
ymd("1920\1\2")
ymd("1920/1/2")
dt1
ymd_hms(dt1)
hms("03:22:14")
st2
dt2
ymd(dt2)
update(this_moment, hours=8, minutes=34, seconds=55)
this_moment
this_moment <- update(this_moment, now())
this_moment <- update(this_moment, hours=10, minutes=16, seconds=0)
this_moment
nyc <- now("America/New_York")
nyc
nyc + days(2)
depart <- nyc + days(2)
depart
depart <- update(depart, hours-17, minutes=34)
depart <- update(depart, hours=17, minutes=34)
epart
depart
arrive <- depart + hours(15) + minutes(50)
?with_tz
arrive <- with_tz(arrive, "Asia/Hong_Kong")
arrive
last_time <- mdy("June 17, 2008", tz="Singapore")
last_time
?new_interval()
?new_interval
how_long <- new_interval(last_time, arrive)
as.period(how_long)
stopwatch()
survey <- StudentSurvey
library(SDSFoundations)
survey <- StudentSurvey
View(survey)
hist(survey$austin)
mean(survey$austin)
sd(survey$austin)
setwd("C:/Users/Safe User/Desktop/Online Classes/Exploratory Data/First Project/ExData_Plotting1")
td <- tempdir()
tf <- tempfile(tempdir=td, fileext=".zip")
?tempfile
tf <- tempfile(tmpdir=td, fileext=".zip")
url <- "https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip"
download.file(url, tf)
?unzip
?unz
dir()
tempdir()
?tempdir()
fname <- unzip(tf, list=TRUE)$Name[1]
unzip(tf, files=fname, exdir=td, overwrite=TRUE)
fpath = file.path(td, fname)
?read.csv
power <- read.csv(fpath)
View(power)
rm(power)
power <- read.csv(fpath, sep=".")
power <- read.table(fpath, header=TRUE, sep=".", row.names=NULL)
